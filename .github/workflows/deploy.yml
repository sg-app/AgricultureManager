name: Publish image to Github container repository

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
    tags:
      - "v*"

# Cancel previous PR/branch runs when a new commit is pushed
#concurrency:
#  group: ${{ github.ref }}
#  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to GitHub Container Registry
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '[skip ci]') }}
    permissions:
      actions: read
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract Version from Tag
        id: extract-version
        run: |
          RAW_VERSION="${GITHUB_REF_NAME}"
          VERSION="${RAW_VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine Docker Tags
        id: determine-tags
        run: |
          if [[ "${{ env.VERSION }}" == *"beta"* ]]; then
            echo "tags=type=raw,value=pre" >> $GITHUB_ENV
          else
            echo "tags=type=raw,value=latest" >> $GITHUB_ENV
          fi
          echo "Version: ${{ env.VERSION }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.VERSION }}
            type=semver,pattern={{major}},value=${{ env.VERSION }}
            ${{ env.tags }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: "{{defaultContext}}:src"
          file: "./AgricultureManager.CoreApp/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
