@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using AgricultureManager.Core.Application.Features.HarvestUnitFeatures
@using AgricultureManager.Core.Application.Store.Features.HarvestUnitStore

<RadzenCheckBox TValue="bool" ValueChanged="OnAllowMultiSelectionChanged" Value=@_allowMultiSelectOnRowClick Name="AllowMultiSelection" />
<RadzenLabel Text="Mehrfachauswahl" Component="AllowMultiSelection" />
<div class="container-fluid">
    <div class="row">

    <div class="col-xxl-4 col-xl-6 col-md-8">
        <RadzenDataGrid Value="@HarvestUnitState.Value.SelectedHarvestUnits"
                        ValueChanged="@(x=>Dispatcher.Dispatch(new SetSelectedHarvestUnitsAction(x)))"
                        AllowSorting="true"
                        Data="@HarvestUnitState.Value.HarvestUnitsOverview"
                        TItem="HarvestUnitOverview"
                        SelectionMode="@(_allowMultiSelectOnRowClick ? DataGridSelectionMode.Multiple : DataGridSelectionMode.Single)"
                        IsLoading=@HarvestUnitState.Value.IsLoading
                        LoadData="@LoadData"
                        Density="Density.Compact">
            <Columns>
                @if (_allowMultiSelectOnRowClick)
                {
                    <RadzenDataGridColumn OrderIndex="-1" Width="60px" Sortable="false" Filterable="false">
                        <Template Context="data">
                            <RadzenCheckBox TriState="false" Value="@(HarvestUnitState.Value.SelectedHarvestUnits != null && HarvestUnitState.Value.SelectedHarvestUnits.Contains(data))" TValue="bool" />
                        </Template>
                    </RadzenDataGridColumn>
                }
                <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.HarvestUnitName))" Title="Name" />
                <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.FieldName))" Title="Feld" />
                <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.Area))" Title="Fläche">
                    <Template Context="data">
                        @data.Area ha
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.CultureShortName))" Title="Kultur" />
            </Columns>
        </RadzenDataGrid>
    </div>
        <div class="col-xxl-8">
        <JobsTabs />
    </div>
    </div>

</div>

@* <style>
    .rz-grid-table {
        width: unset;
    }
</style> *@

@code {
    [Inject] public IDispatcher Dispatcher { get; set; } = default!;
    [Inject] public IState<HarvestYearState> HarvestYearState { get; set; } = default!;
    [Inject] public IState<HarvestUnitState> HarvestUnitState { get; set; } = default!;

    private bool _allowMultiSelectOnRowClick;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        HarvestYearState.StateChanged += (s, e) =>
        {
            LoadData(new LoadDataArgs());
        };
        LoadData(new LoadDataArgs());
    }

    private void LoadData(LoadDataArgs args)
    {
        // Dispatcher.Dispatch(new LoadHarvestUnitsDataAction(HarvestYearState.Value.SelectedHarvestYear));
    }

    private void OnAllowMultiSelectionChanged(bool state)
    {
        _allowMultiSelectOnRowClick = state;

        if (!state)
        {
            Dispatcher.Dispatch(new SetSelectedHarvestUnitsAction(default!));
        }
    }
}
