@using AgricultureManager.Core.Application.Features.HarvestUnitFeatures
@using AgricultureManager.Core.Application.Shared.Interfaces.Services

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<RadzenCheckBox TValue="bool" ValueChanged="OnAllowMultiSelectionChanged" Value=@_allowMultiSelectOnRowClick Name="AllowMultiSelection" />
<RadzenLabel Text="Mehrfachauswahl" Component="AllowMultiSelection" />
<div class="d-flex flex-wrap">
    <RadzenDataGrid @ref="_grid"
                    @bind-Value="_selectedItems"
                    AllowSorting="true"
                    Data="_data"
                    TItem="HarvestUnitOverview"
                    SelectionMode="@(_allowMultiSelectOnRowClick ? DataGridSelectionMode.Multiple : DataGridSelectionMode.Single)"
                    IsLoading=@_isLoading
                    LoadData="@LoadData"
                    Density="Density.Compact">
        <Columns>
            @if (_allowMultiSelectOnRowClick)
            {
                <RadzenDataGridColumn OrderIndex="-1" Width="60px" Sortable="false" Filterable="false">
                    <Template Context="data">
                        <RadzenCheckBox TriState="false" Value="@(_selectedItems != null && _selectedItems.Contains(data))" TValue="bool" />
                    </Template>
                </RadzenDataGridColumn>
            }
            <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.HarvestUnitName))" Title="Name" />
            <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.FieldName))" Title="Feld" />
            <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.Area))" Title="Fläche">
                <Template Context="data">
                    @data.Area ha
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="HarvestUnitOverview" Property="@(nameof(HarvestUnitOverview.CultureShortName))" Title="Kultur" />
        </Columns>
    </RadzenDataGrid>
    @if (_selectedItems?.Count > 0)
    {
        @*    <SeedProcess HarvestUnits="@_selectedItems" />
    <PlantProtectionProcess HarvestUnits="@_selectedItems" />
    <FertilizationProcess HarvestUnits="@_selectedItems" />
    <HarvestProcess HarvestUnits="@_selectedItems" /> *@
    }

</div>
<style>
    .rz-grid-table {
        width: unset;
    }
</style>

@code {
    [Inject] public IMediator Mediator { get; set; } = default!;
    [Inject] public IHarvestYearService HarvestYearService { get; set; } = default!;
    [Inject] public IDispatcher Dispatcher { get; set; } = default!;
    [Inject] public IState<HarvestYearState> HarvestYearState { get; set; } = default!;

    private IList<HarvestUnitOverview>? _data;
    private IList<HarvestUnitOverview>? _selectedItems;
    private HarvestUnitOverview? _selectedSingleItem => _selectedItems?.FirstOrDefault();
    private bool _allowMultiSelectOnRowClick;
    private RadzenDataGrid<HarvestUnitOverview> _grid = default!;
    private bool _isLoading;
    private HarvestYearVm? _harvestYear;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        HarvestYearState.StateChanged += async (s, e) =>
        {
            _harvestYear = HarvestYearState.Value.SelectedHarvestYear;
            await LoadData(new LoadDataArgs());
            await _grid.Reload();
        };
        _harvestYear = HarvestYearState.Value.SelectedHarvestYear;
    }

    private async Task LoadData(LoadDataArgs args)
    {
        _isLoading = true;
        if (_harvestYear is not null)
        {
            var response = await Mediator.Send(new GetHarvestUnitsFromYear(_harvestYear.Id));
            _data = response.Data;
        }
        _isLoading = false;
    }

    private void OnAllowMultiSelectionChanged(bool state)
    {
        _allowMultiSelectOnRowClick = state;

        if (!state)
        {
            _selectedItems = null;
            _grid.Reset();
        }
    }
}
