@inherits FluxorComponent
<RadzenCard class="mt-1">
    <div class="container-fluid">

        <div class="row">
            <div class="col-5"><b>Dünger</b></div>
            <div class="col-3"><b>Dosierung</b></div>
            @foreach (var detail in _item.Details)
            {
                <div class="col-1"><b>@detail.Key.Name</b></div>
            }
        </div>
        <div class="row">
            <div class="col-5"><RadzenDropDown TValue="Guid" Data="@FertilizerState.Value.Fertilizers" TextProperty="Name" ValueProperty="Id" @bind-Value="@_item.FertilizerId" /></div>
            <div class="col-3"><RadzenNumeric TValue="float" Format="0.00" Step="0.1" @bind-Value="@_item.Dosage" Change="@(args => DosageChangedHandler(args, _item))" /></div>
            @foreach (var detail in _item.Details)
            {
                <div class="col-1"><b>@(detail.Value * _item.Dosage)</b></div>
            }
        </div>
    </div>
    <SaveCancelButton ButtonResult="OnSaveClick" />
</RadzenCard>

@code {
    [Inject] public IMapper Mapper { get; set; } = default!;
    [Inject] public DialogService DialogService { get; set; } = default!;
    [Inject] IState<FertilizerState> FertilizerState { get; set; } = default!;
    [Inject] IState<FertilizerDetailState> FertilizerDetailState { get; set; } = default!;
    [Parameter] public FertilizerPlaningVm Item { get; set; } = default!;
    [Parameter] public ICollection<FertilizerPlaningSpecificationVm> Specs { get; set; } = default!;

    private EditFertilizerPlaningVm _item = new();

    protected override void OnParametersSet()
    {
        _item = Mapper.Map<EditFertilizerPlaningVm>(Item);
        foreach (var spec in Specs)
        {
            _item.Details.Add(FertilizerDetailState.Value.FertilizerDetails.First(f => f.Id == spec.FertilizerDetailId), spec.Quantity);
        }
    }

    private void DosageChangedHandler(float value, EditFertilizerPlaningVm item)
    {
        // if (Fertilizers != null)
        // {
        // 	item.N = value * Fertilizers.FirstOrDefault(f => f.Id == item.FertilizerId)?.FertilizerDetail?.N ?? default;
        // 	item.P = value * Fertilizers.FirstOrDefault(f => f.Id == item.FertilizerId)?.FertilizerDetail?.P ?? default;
        // 	item.K = value * Fertilizers.FirstOrDefault(f => f.Id == item.FertilizerId)?.FertilizerDetail?.K ?? default;
        // 	item.S = value * Fertilizers.FirstOrDefault(f => f.Id == item.FertilizerId)?.FertilizerDetail?.S ?? default;
        // }
    }

    private void OnSaveClick(bool save)
    {
        if (save)
        {
            Mapper.Map(_item, Item);
        }
        DialogService.Close(save);
    }
}